generator client {
  provider = "prisma-client-js"
}

datasource database {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // Atributos
  id       Int    @id @default(autoincrement()) @map("ID_USUARIO")
  name     String @map("NM_USUARIO") @database.VarChar(128)
  email    String @map("EM_USUARIO") @database.VarChar(128)
  contact  String @map("CN_USUARIO") @database.VarChar(16)
  password String @map("SN_USUARIO") @database.VarChar(32) // CRIPTOGRAFADO

  // Relacionamentos
  barberShops BarberShop?

  // Identificadores de modificação
  createdAt     DateTime  @default(now()) @map("DT_CRIACAO")
  updatedAt     DateTime  @updatedAt @map("DT_ATUALIZACAO")
  verifiedAt    DateTime? @map("DT_VERIFICACAO")
  inactivatedAt DateTime? @map("DT_INATIVACAO")

  // Denifições da tabela
  @@map("TB_USUARIO")
}

model Customer {
  // Atributos
  id        Int      @id @default(autoincrement()) @map("ID_CLIENTE")
  name      String   @map("NM_CLIENTE") @database.VarChar(128)
  contact   String   @map("CN_CLIENTE") @database.VarChar(16)
  birthDate DateTime @map("DT_NASCIMENTO") @database.Date

  // Relacionamentos
  barberShop   BarberShop  @relation(fields: [barberShopId], references: [id])
  barberShopId Int         @map("ID_BARBEARIA") @database.Integer
  attentions   Attention[]

  // Identificadores de modificação
  createdAt DateTime @default(now()) @map("DT_CRIACAO")

  @@unique([contact, barberShopId])
  // Definições da tabela
  @@map("TB_CLIENTE")
}

model Employee {
  // Atributos
  id             Int    @id @default(autoincrement()) @map("ID_FUNCIONARIO")
  nickname       String @map("NM_FUNCIONARIO") @database.VarChar(128)
  accessCode     String @map("CD_ACESSO") @database.Char(6)
  accessPassword String @map("SN_ACESSO") @database.VarChar(32) // CRIPTOGRAFADO

  // Relacionamentos
  barberShop   BarberShop  @relation(fields: [barberShopId], references: [id])
  barberShopId Int         @map("ID_BARBEARIA") @database.Integer
  attentions   Attention[]

  // Identificadores de modificação
  createdAt     DateTime  @default(now()) @map("DT_CRIACAO")
  updatedAt     DateTime  @updatedAt @map("DT_ATUALIZACAO")
  inactivatedAt DateTime? @map("DT_INATIVACAO")

  // Definições da tabela
  @@map("TB_FUNCIONARIO")
}

model BarberShop {
  // Atributos
  id          Int    @id @default(autoincrement()) @map("ID_BARBEARIA")
  name        String @map("NM_BARBEARIA") @database.VarChar(128)
  description String @map("DC_BARBEARIA") @database.VarChar(256)

  // Relacionamentos
  owner              User              @relation(fields: [ownerId], references: [id])
  ownerId            Int               @unique @map("ID_USUARIO") @database.Integer
  services           Service[]
  servicesCategories ServiceCategory[]
  customers          Customer[]
  employees          Employee[]
  attentions         Attention[]

  // Identificadores de modificação
  createdAt     DateTime  @default(now()) @map("DT_CRIACAO")
  updatedAt     DateTime  @updatedAt @map("DT_ATUALIZACAO")
  inactivatedAt DateTime? @map("DT_INATIVACAO")

  // Denifições da tabela
  @@map("TB_BARBEARIA")
}

model ServiceCategory {
  // Atributos
  id   Int    @id @default(autoincrement()) @map("ID_CATEGORIA")
  name String @map("NM_CATEGORIA") @database.VarChar(32)

  // Relacionamento
  barberShop   BarberShop @relation(fields: [barberShopId], references: [id])
  barberShopId Int        @map("ID_BARBEARIA") @database.Integer
  services     Service[]

  // Identificadores de modificação
  createdAt     DateTime  @default(now()) @map("DT_CRIACAO")
  updatedAt     DateTime  @updatedAt @map("DT_ATUALIZACAO")
  inactivatedAt DateTime? @map("DT_INATIVACAO")

  // Definições da tabela
  @@map("TB_CATEGORIA")
}

model Service {
  // Atributos
  id          Int     @id @default(autoincrement()) @map("ID_SERVICO")
  price       Decimal @map("VL_SERVICO") @database.Decimal(10, 2)
  name        String  @map("NM_SERVICO") @database.VarChar(128)
  description String  @map("DC_SERVICO") @database.VarChar(256)

  // Relacionamentos
  category     ServiceCategory @relation(fields: [categoryId], references: [id])
  categoryId   Int             @map("ID_CATEGORIA") @database.Integer
  barberShop   BarberShop      @relation(fields: [barberShopId], references: [id])
  barberShopId Int             @map("ID_BARBEARIA") @database.Integer
  attentions   Attention[]

  // Identificadores de modificação
  createdAt     DateTime  @default(now()) @map("DT_CRIACAO")
  updatedAt     DateTime  @updatedAt @map("DT_ATUALIZACAO")
  inactivatedAt DateTime? @map("DT_INATIVACAO")

  // Definições da tabela
  @@map("TB_SERVICO")
}

model Attention {
  // Atributos
  id          Int       @id @default(autoincrement()) @map("ID_ATENDIMENTO")
  nickname    String    @map("NM_ATENDIMENTO") @database.VarChar(128)
  description String    @map("DC_ATENDIMENTO") @database.VarChar(256)
  services    Service[]

  // Relacionamentos
  barberShop   BarberShop @relation(fields: [barberShopId], references: [id])
  barberShopId Int        @map("ID_BARBEARIA") @database.Integer
  employee     Employee   @relation(fields: [employeeId], references: [id])
  employeeId   Int        @map("ID_FUNCIONARIO") @database.Integer
  customer     Customer   @relation(fields: [customerId], references: [id])
  customerId   Int        @map("ID_CLIENTE") @database.Integer

  // Identificadores de modificação
  createdAt DateTime @default(now()) @map("DT_CRIACAO")

  // Denifições da tabela
  @@map("TB_ATENDIMENTO")
}
